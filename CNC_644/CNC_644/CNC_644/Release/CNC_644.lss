
CNC_644.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000001b8  0000024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  0080010e  0080010e  0000025a  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  0000025c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e8 eb       	ldi	r30, 0xB8	; 184
  90:	f1 e0       	ldi	r31, 0x01	; 1
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ae 30       	cpi	r26, 0x0E	; 14
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	11 e0       	ldi	r17, 0x01	; 1
  a0:	ae e0       	ldi	r26, 0x0E	; 14
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a9 31       	cpi	r26, 0x19	; 25
  aa:	b1 07       	cpc	r27, r17
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	8c e0       	ldi	r24, 0x0C	; 12
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 ad 00 	call	0x15a	; 0x15a <USART_Init>
  c6:	0e 94 85 00 	call	0x10a	; 0x10a <StepperInitialise>
  ca:	78 94       	sei
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	81 b9       	out	0x01, r24	; 1
  d0:	12 b8       	out	0x02, r1	; 2
  d2:	84 b9       	out	0x04, r24	; 4
  d4:	15 b8       	out	0x05, r1	; 5
  d6:	10 e2       	ldi	r17, 0x20	; 32
  d8:	01 e0       	ldi	r16, 0x01	; 1
  da:	80 91 0e 01 	lds	r24, 0x010E
  de:	88 35       	cpi	r24, 0x58	; 88
  e0:	19 f4       	brne	.+6      	; 0xe8 <main+0x2e>
  e2:	0e 94 95 00 	call	0x12a	; 0x12a <StepUp>
  e6:	04 c0       	rjmp	.+8      	; 0xf0 <main+0x36>
  e8:	88 37       	cpi	r24, 0x78	; 120
  ea:	29 f4       	brne	.+10     	; 0xf6 <main+0x3c>
  ec:	0e 94 88 00 	call	0x110	; 0x110 <StepDown>
  f0:	10 93 0e 01 	sts	0x010E, r17
  f4:	f2 cf       	rjmp	.-28     	; 0xda <main+0x20>
  f6:	86 34       	cpi	r24, 0x46	; 70
  f8:	19 f4       	brne	.+6      	; 0x100 <main+0x46>
  fa:	00 93 0f 01 	sts	0x010F, r16
  fe:	ed cf       	rjmp	.-38     	; 0xda <main+0x20>
 100:	86 36       	cpi	r24, 0x66	; 102
 102:	59 f7       	brne	.-42     	; 0xda <main+0x20>
 104:	10 92 0f 01 	sts	0x010F, r1
 108:	e8 cf       	rjmp	.-48     	; 0xda <main+0x20>

0000010a <StepperInitialise>:
 10a:	10 92 16 01 	sts	0x0116, r1
 10e:	08 95       	ret

00000110 <StepDown>:
 110:	80 91 16 01 	lds	r24, 0x0116
 114:	81 50       	subi	r24, 0x01	; 1
 116:	87 70       	andi	r24, 0x07	; 7
 118:	80 93 16 01 	sts	0x0116, r24
 11c:	e1 e0       	ldi	r30, 0x01	; 1
 11e:	f1 e0       	ldi	r31, 0x01	; 1
 120:	e8 0f       	add	r30, r24
 122:	f1 1d       	adc	r31, r1
 124:	80 81       	ld	r24, Z
 126:	82 b9       	out	0x02, r24	; 2
 128:	08 95       	ret

0000012a <StepUp>:
 12a:	80 91 16 01 	lds	r24, 0x0116
 12e:	8f 5f       	subi	r24, 0xFF	; 255
 130:	87 70       	andi	r24, 0x07	; 7
 132:	80 93 16 01 	sts	0x0116, r24
 136:	e1 e0       	ldi	r30, 0x01	; 1
 138:	f1 e0       	ldi	r31, 0x01	; 1
 13a:	e8 0f       	add	r30, r24
 13c:	f1 1d       	adc	r31, r1
 13e:	80 81       	ld	r24, Z
 140:	82 b9       	out	0x02, r24	; 2
 142:	08 95       	ret

00000144 <MoveSteps>:
 144:	08 95       	ret

00000146 <__vector_16>:
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <USART_Init>:
 15a:	90 93 c5 00 	sts	0x00C5, r25
 15e:	80 93 c4 00 	sts	0x00C4, r24
 162:	e1 ec       	ldi	r30, 0xC1	; 193
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	88 e1       	ldi	r24, 0x18	; 24
 168:	80 83       	st	Z, r24
 16a:	86 e0       	ldi	r24, 0x06	; 6
 16c:	80 93 c2 00 	sts	0x00C2, r24
 170:	80 81       	ld	r24, Z
 172:	80 68       	ori	r24, 0x80	; 128
 174:	80 83       	st	Z, r24
 176:	08 95       	ret

00000178 <USART_Transmit>:
 178:	90 91 c0 00 	lds	r25, 0x00C0
 17c:	95 ff       	sbrs	r25, 5
 17e:	fc cf       	rjmp	.-8      	; 0x178 <USART_Transmit>
 180:	80 93 c6 00 	sts	0x00C6, r24
 184:	08 95       	ret

00000186 <USART_Receive>:
 186:	80 91 c0 00 	lds	r24, 0x00C0
 18a:	87 ff       	sbrs	r24, 7
 18c:	fc cf       	rjmp	.-8      	; 0x186 <USART_Receive>
 18e:	80 91 c6 00 	lds	r24, 0x00C6
 192:	08 95       	ret

00000194 <__vector_20>:
 194:	1f 92       	push	r1
 196:	0f 92       	push	r0
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	0f 92       	push	r0
 19c:	11 24       	eor	r1, r1
 19e:	8f 93       	push	r24
 1a0:	80 91 c6 00 	lds	r24, 0x00C6
 1a4:	80 93 0e 01 	sts	0x010E, r24
 1a8:	8f 91       	pop	r24
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <_exit>:
 1b4:	f8 94       	cli

000001b6 <__stop_program>:
 1b6:	ff cf       	rjmp	.-2      	; 0x1b6 <__stop_program>
