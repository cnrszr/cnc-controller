
CNC_644.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000025e  000002f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000025e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010e  0080010e  00000300  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000300  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 14 01 	jmp	0x228	; 0x228 <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ee e5       	ldi	r30, 0x5E	; 94
  90:	f2 e0       	ldi	r31, 0x02	; 2
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	ae 30       	cpi	r26, 0x0E	; 14
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	11 e0       	ldi	r17, 0x01	; 1
  a0:	ae e0       	ldi	r26, 0x0E	; 14
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a8 31       	cpi	r26, 0x18	; 24
  aa:	b1 07       	cpc	r27, r17
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 2d 01 	jmp	0x25a	; 0x25a <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
  ba:	8c e0       	ldi	r24, 0x0C	; 12
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <USART_Init>
  c2:	0e 94 70 00 	call	0xe0	; 0xe0 <StepperInitialise>
  c6:	78 94       	sei
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	81 b9       	out	0x01, r24	; 1
  cc:	12 b8       	out	0x02, r1	; 2
  ce:	84 b9       	out	0x04, r24	; 4
  d0:	15 b8       	out	0x05, r1	; 5
  d2:	87 b9       	out	0x07, r24	; 7
  d4:	18 b8       	out	0x08, r1	; 8
  d6:	8a b9       	out	0x0a, r24	; 10
  d8:	1b b8       	out	0x0b, r1	; 11
  da:	0e 94 24 01 	call	0x248	; 0x248 <ReceivedCheck>
  de:	fd cf       	rjmp	.-6      	; 0xda <main+0x20>

000000e0 <StepperInitialise>:
  e0:	10 92 14 01 	sts	0x0114, r1
  e4:	84 e6       	ldi	r24, 0x64	; 100
  e6:	80 93 13 01 	sts	0x0113, r24
  ea:	80 93 12 01 	sts	0x0112, r24
  ee:	80 93 10 01 	sts	0x0110, r24
  f2:	10 92 15 01 	sts	0x0115, r1
  f6:	10 92 11 01 	sts	0x0111, r1
  fa:	08 95       	ret

000000fc <StepDown>:
  fc:	80 91 14 01 	lds	r24, 0x0114
 100:	81 50       	subi	r24, 0x01	; 1
 102:	87 70       	andi	r24, 0x07	; 7
 104:	80 93 14 01 	sts	0x0114, r24
 108:	e2 e0       	ldi	r30, 0x02	; 2
 10a:	f1 e0       	ldi	r31, 0x01	; 1
 10c:	e8 0f       	add	r30, r24
 10e:	f1 1d       	adc	r31, r1
 110:	80 81       	ld	r24, Z
 112:	82 b9       	out	0x02, r24	; 2
 114:	08 95       	ret

00000116 <StepUp>:
 116:	80 91 14 01 	lds	r24, 0x0114
 11a:	8f 5f       	subi	r24, 0xFF	; 255
 11c:	87 70       	andi	r24, 0x07	; 7
 11e:	80 93 14 01 	sts	0x0114, r24
 122:	e2 e0       	ldi	r30, 0x02	; 2
 124:	f1 e0       	ldi	r31, 0x01	; 1
 126:	e8 0f       	add	r30, r24
 128:	f1 1d       	adc	r31, r1
 12a:	80 81       	ld	r24, Z
 12c:	82 b9       	out	0x02, r24	; 2
 12e:	08 95       	ret

00000130 <MoveSteps>:
 130:	08 95       	ret

00000132 <SetUpCalculations>:
 132:	08 95       	ret

00000134 <__vector_16>:
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	ef 93       	push	r30
 154:	ff 93       	push	r31
 156:	28 9a       	sbi	0x05, 0	; 5
 158:	0e 94 8b 00 	call	0x116	; 0x116 <StepUp>
 15c:	80 91 11 01 	lds	r24, 0x0111
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	51 f0       	breq	.+20     	; 0x178 <__vector_16+0x44>
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	28 f0       	brcs	.+10     	; 0x172 <__vector_16+0x3e>
 168:	82 30       	cpi	r24, 0x02	; 2
 16a:	c1 f0       	breq	.+48     	; 0x19c <__vector_16+0x68>
 16c:	83 30       	cpi	r24, 0x03	; 3
 16e:	a1 f4       	brne	.+40     	; 0x198 <__vector_16+0x64>
 170:	0d c0       	rjmp	.+26     	; 0x18c <__vector_16+0x58>
 172:	28 98       	cbi	0x05, 0	; 5
 174:	15 bc       	out	0x25, r1	; 37
 176:	12 c0       	rjmp	.+36     	; 0x19c <__vector_16+0x68>
 178:	87 b5       	in	r24, 0x27	; 39
 17a:	81 50       	subi	r24, 0x01	; 1
 17c:	87 bd       	out	0x27, r24	; 39
 17e:	87 b5       	in	r24, 0x27	; 39
 180:	8e 30       	cpi	r24, 0x0E	; 14
 182:	61 f4       	brne	.+24     	; 0x19c <__vector_16+0x68>
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	80 93 11 01 	sts	0x0111, r24
 18a:	08 c0       	rjmp	.+16     	; 0x19c <__vector_16+0x68>
 18c:	87 b5       	in	r24, 0x27	; 39
 18e:	8f 5f       	subi	r24, 0xFF	; 255
 190:	87 bd       	out	0x27, r24	; 39
 192:	87 b5       	in	r24, 0x27	; 39
 194:	8f 3f       	cpi	r24, 0xFF	; 255
 196:	11 f4       	brne	.+4      	; 0x19c <__vector_16+0x68>
 198:	10 92 11 01 	sts	0x0111, r1
 19c:	ff 91       	pop	r31
 19e:	ef 91       	pop	r30
 1a0:	bf 91       	pop	r27
 1a2:	af 91       	pop	r26
 1a4:	9f 91       	pop	r25
 1a6:	8f 91       	pop	r24
 1a8:	7f 91       	pop	r23
 1aa:	6f 91       	pop	r22
 1ac:	5f 91       	pop	r21
 1ae:	4f 91       	pop	r20
 1b0:	3f 91       	pop	r19
 1b2:	2f 91       	pop	r18
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <StartTimer>:
 1be:	84 b5       	in	r24, 0x24	; 36
 1c0:	82 60       	ori	r24, 0x02	; 2
 1c2:	84 bd       	out	0x24, r24	; 36
 1c4:	85 b5       	in	r24, 0x25	; 37
 1c6:	85 60       	ori	r24, 0x05	; 5
 1c8:	85 bd       	out	0x25, r24	; 37
 1ca:	8f ef       	ldi	r24, 0xFF	; 255
 1cc:	87 bd       	out	0x27, r24	; 39
 1ce:	ee e6       	ldi	r30, 0x6E	; 110
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	82 60       	ori	r24, 0x02	; 2
 1d6:	80 83       	st	Z, r24
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	80 93 11 01 	sts	0x0111, r24
 1de:	08 95       	ret

000001e0 <StopTimer>:
 1e0:	83 e0       	ldi	r24, 0x03	; 3
 1e2:	80 93 11 01 	sts	0x0111, r24
 1e6:	08 95       	ret

000001e8 <USART_Init>:
 1e8:	90 93 c5 00 	sts	0x00C5, r25
 1ec:	80 93 c4 00 	sts	0x00C4, r24
 1f0:	e1 ec       	ldi	r30, 0xC1	; 193
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	88 e1       	ldi	r24, 0x18	; 24
 1f6:	80 83       	st	Z, r24
 1f8:	86 e0       	ldi	r24, 0x06	; 6
 1fa:	80 93 c2 00 	sts	0x00C2, r24
 1fe:	80 81       	ld	r24, Z
 200:	80 68       	ori	r24, 0x80	; 128
 202:	80 83       	st	Z, r24
 204:	80 e2       	ldi	r24, 0x20	; 32
 206:	80 93 0e 01 	sts	0x010E, r24
 20a:	08 95       	ret

0000020c <USART_Transmit>:
 20c:	90 91 c0 00 	lds	r25, 0x00C0
 210:	95 ff       	sbrs	r25, 5
 212:	fc cf       	rjmp	.-8      	; 0x20c <USART_Transmit>
 214:	80 93 c6 00 	sts	0x00C6, r24
 218:	08 95       	ret

0000021a <USART_Receive>:
 21a:	80 91 c0 00 	lds	r24, 0x00C0
 21e:	87 ff       	sbrs	r24, 7
 220:	fc cf       	rjmp	.-8      	; 0x21a <USART_Receive>
 222:	80 91 c6 00 	lds	r24, 0x00C6
 226:	08 95       	ret

00000228 <__vector_20>:
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	8f 93       	push	r24
 234:	80 91 c6 00 	lds	r24, 0x00C6
 238:	80 93 0e 01 	sts	0x010E, r24
 23c:	8f 91       	pop	r24
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <ReceivedCheck>:
 248:	80 91 0e 01 	lds	r24, 0x010E
 24c:	81 34       	cpi	r24, 0x41	; 65
 24e:	21 f4       	brne	.+8      	; 0x258 <ReceivedCheck+0x10>
 250:	0e 94 0d 01 	call	0x21a	; 0x21a <USART_Receive>
 254:	0e 94 06 01 	call	0x20c	; 0x20c <USART_Transmit>
 258:	08 95       	ret

0000025a <_exit>:
 25a:	f8 94       	cli

0000025c <__stop_program>:
 25c:	ff cf       	rjmp	.-2      	; 0x25c <__stop_program>
